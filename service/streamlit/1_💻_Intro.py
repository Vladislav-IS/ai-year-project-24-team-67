import streamlit as st
import httpx
from os import mkdir
from os.path import dirname, abspath, exists
import logging
from logging.handlers import RotatingFileHandler
import asyncio


URL = 'http://127.0.0.1:8000/'


async def get():
    async with httpx.AsyncClient() as client:
        response = await client.get(URL)
        return response


async def main():
    st.set_page_config(
        page_title="Intro",
        page_icon="üíª"
        )
    st.title('''
             Intro. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã —Å \
             –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π (–≥–æ–¥–æ–≤–æ–π –ø—Ä–æ–µ–∫—Ç)
             ''')
    st.markdown('''
                –ö—É—Ä–∞—Ç–æ—Ä - –ú–∞—Ä–∫ –ë–ª—É–º–µ–Ω–∞—É ([Telegram](https://t.me/markblumenau), [GitHub](https://github.com/markblumenau)).

                –ö–æ–º–∞–Ω–¥–∞:
                - –ú–∏—Ö–∞–∏–ª –ú–æ–∫—Ä–æ–Ω–æ—Å–æ–≤ ([Telegram](https://t.me/idodir), [GitHub](https://github.com/iDodir));
                - –í–ª–∞–¥–∏—Å–ª–∞–≤ –°–µ–º–µ–Ω–æ–≤ ([Telegram](https://t.me/Vladislav_iSemenov), [GitHub](https://github.com/Vladislav-IS));
                - –ú–∞—Ç–≤–µ–π –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ ([Telegram](https://t.me/spiridonovms), [GitHub](https://github.com/matveyspiridonov)).
                ''')
    st.markdown('''
                –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ - –ø—Ä–æ–≤–µ—Å—Ç–∏ –º–Ω–æ–≥–æ–∫–ª–∞—Å—Å–æ–≤—É—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏–π (—á–∞—Å—Ç–∏—Ü) –≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ 
                LHCb (–¥–µ—Ç–µ–∫—Ç–æ—Ä –Ω–∞ –∞–¥—Ä–æ–Ω–Ω–æ–º –∫–æ–ª–ª–∞–π–¥–µ—Ä–µ). –ë—É–¥—É—Ç –æ–ø—Ä–æ–±–æ–≤–∞–Ω—ã –∫–∞–∫ classic ML, —Ç–∞–∫ –∏ DL –ø–æ–¥—Ö–æ–¥—ã.
                ''')
    st.markdown('''
                –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ **üìà EDA** –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑–≤–µ–¥–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ **ü§ñ Classic ML** -- –æ–±—É—á–µ–Ω–∏–µ –∏ –∏–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–µ–π.
                ''')


    response = await get()
    if response.status_code == 200:
        st.info("–°–≤—è–∑—å —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    else:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ API: {response.status_code}.")


if __name__ == '__main__':
    
    cur_dir = dirname(abspath(__file__))
    if not exists(f'{cur_dir}/content'):
        mkdir(f'{cur_dir}/content')
    if not exists(f'{cur_dir}/logs'):
        mkdir(f'{cur_dir}/logs')

    logging.basicConfig(
    format="[%(asctime)s.%(msecs)03d] %(levelname)s [%(thread)d] - %(message)s",
    handlers=[RotatingFileHandler('logs/streamlit.log', 'a', 1000000, 10)],
    level=logging.INFO
    )

    asyncio.run(main())